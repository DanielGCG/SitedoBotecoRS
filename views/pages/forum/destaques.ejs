<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/pages/forum/style/forum.css">
    <link rel="stylesheet" href="/pages/forum/style/novadiscussao.css">
    
    <link rel="stylesheet" href="/geral/better-popup/better-popup.css">
    <link rel="stylesheet" href="/pages/forum/style/criarpost.css">
    <link rel="stylesheet" href="/pages/forum/style/publicacoes.css">
  </head>
  
  <div id="titulo-categoria" style="text-align: center; margin-bottom: 1rem;"><h2>Destaques</h2></div>
  <div class="forum-header">
    <input type="text" placeholder="Buscar t√≥picos ou categorias...">
    <button style="margin-left: 5px;" data-popup="novo-post-popup">Novo Post</button>
  </div>
  
  <div class="better-popup" id="novo-post-popup">
    <div class="better-popup-content">
        <button class="better-popup-close">X</button>
        <div class="twitter-draft-container">
            <div class="header">
                <img src="pages/cutucar/user-avatar.png" class="avatar">
                <span class="username">@botdoboteco</span>
            </div>
            <!-- Campo de texto -->
            <textarea class="tweet-input-grande" id="messageText" placeholder="no que est√° pensando?" maxlength="440"></textarea>
            <div id="char-count" class="char-count">
                <span id="char-count-text">0/440</span>
            </div>

            <!-- Preview de M√≠dia -->
            <div id="media-preview" class="media-preview">
            </div>

            <div class="twitter-draft-footer">
                <div class="twitter-draft-footer-midia">
                    <!-- Bot√£o para fazer upload de m√≠dia -->
                    <div class="upload-container">
                        <label for="mediaFile" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                viewBox="0 0 24 24" 
                                fill="#1D9BF0"
                                width="24" 
                                height="24"
                                aria-hidden="false">
                                <path d="M3 5.5C3 4.119 4.119 3 5.5 3h13C19.881 3 21 4.119 21 5.5v13c0 1.381-1.119 2.5-2.5 2.5h-13C4.119 21 3 19.881 3 18.5v-13zM5.5 5c-.276 0-.5.224-.5.5v9.086l3-3 3 3 5-5 3 3V5.5c0-.276-.224-.5-.5-.5h-13zM19 15.414l-3-3-5 5-3-3-3 3V18.5c0 .276.224.5.5.5h13c.276 0 .5-.224.5-.5v-3.086zM9.75 7C8.784 7 8 7.784 8 8.75s.784 1.75 1.75 1.75 1.75-.784 1.75-1.75S10.716 7 9.75 7z"></path>
                            </svg>
                        </label>
                        <input type="file" id="mediaFile" accept="image/*,video/*" style="display: none;" onchange="previewMedia()" />
                    </div>
            
                    <!-- Bot√£o para fazer upload de gif -->
                    <div class="upload-container">
                        <label for="selectGifButton" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                viewBox="0 0 24 24" 
                                fill="#1D9BF0"
                                width="24" 
                                height="24"
                                aria-hidden="false">
                                <path d="M3 5.5C3 4.119 4.12 3 5.5 3h13C19.88 3 21 4.119 21 5.5v13c0 1.381-1.12 2.5-2.5 2.5h-13C4.12 21 3 19.881 3 18.5v-13zM5.5 5c-.28 0-.5.224-.5.5v13c0 .276.22.5.5.5h13c.28 0 .5-.224.5-.5v-13c0-.276-.22-.5-.5-.5h-13zM18 10.711V9.25h-3.74v5.5h1.44v-1.719h1.7V11.57h-1.7v-.859H18zM11.79 9.25h1.44v5.5h-1.44v-5.5zm-3.07 1.375c.34 0 .77.172 1.02.43l1.03-.86c-.51-.601-1.28-.945-2.05-.945C7.19 9.25 6 10.453 6 12s1.19 2.75 2.72 2.75c.85 0 1.54-.344 2.05-.945v-2.149H8.38v1.032H9.4v.515c-.17.086-.42.172-.68.172-.76 0-1.36-.602-1.36-1.375 0-.688.6-1.375 1.36-1.375z"></path>
                            </svg>
                            <button id="selectGifButton" style="display: none;"></button>
                        </label>
                    </div>
            
                    <!-- Bot√£o para imagem brat -->
                    <div class="upload-container" style="display: flex; justify-content: center; align-items: center; height: 40px;">
                        <label for="bratButton" style="cursor: url('/img/cursor-mao.png'), auto;">
                            <img src="pages/cutucar/brat.png" style="width: 20px; height: 20px; border-radius: 3px;">
                            <button id="bratButton" style="display: none;" onclick="enableBrat();"></button>
                        </label>
                    </div>
                </div>
            
                <!-- Bot√£o para enviar o tweet -->
                <button id="post" class="post-button">Postar</button>
            </div>
        </div>
    </div>
  </div>
  
  
<section class="publicacoes" id="publicacoes">
</section>
  
<script src="/geral/better-popup/better-popup.js"></script>

<!-- --- L√ìGICA PARA OS GIFS --- -->
<script src="/pages/forum/script/gifs.js" defer></script>
<!-- --- L√ìGICA PARA BRAT --- -->
<script src="/pages/forum/script/brat.js" defer></script>
<!-- --- L√ìGICA PARA PREVIEWMEDIA --- -->
<script src="/pages/forum/script/auxiliar.js" defer></script>

<script>
function renderPublicacoes(publicacoes) {
    const publicacoesDiv = document.getElementById('publicacoes');
    publicacoesDiv.innerHTML = ''; // Limpa o conte√∫do anterior

    if (!publicacoes || Object.keys(publicacoes).length === 0) {
        publicacoesDiv.innerHTML = `
            <div>
                <h2>N√£o h√° publica√ß√µes ainda</h2>
            </div>
        `;
        return;
    }

    // Transforma o objeto em um array de publica√ß√µes
    const publicacoesArray = Object.values(publicacoes);

    publicacoesArray.forEach((publicacao) => {
        if (!publicacao || typeof publicacao !== 'object') {
            console.warn("Publica√ß√£o inv√°lida encontrada:", publicacao);
            return;
        }

        const publicacaoDiv = document.createElement('div');
        publicacaoDiv.classList.add('publicacao');

        const time = new Date(publicacao.ultimoUpdate);
        const now = new Date();
        const isToday = now.toDateString() === time.toDateString();
        const isYesterday = new Date(now.setDate(now.getDate() - 1)).toDateString() === time.toDateString();
        const daysOfWeek = ['domingo', 'segunda', 'ter√ßa', 'quarta', 'quinta', 'sexta', 's√°bado'];
        let tempoFormatado;

        const timeOptions = { hour: '2-digit', minute: '2-digit' };

        if (isToday) {
            tempoFormatado = time.toLocaleTimeString([], timeOptions);
        } else if (isYesterday) {
            tempoFormatado = `ontem ${time.toLocaleTimeString([], timeOptions)}`;
        } else if (now - time < 7 * 24 * 60 * 60 * 1000) {
            tempoFormatado = `${daysOfWeek[time.getDay()]} ${time.toLocaleTimeString([], timeOptions)}`;
        } else {
            tempoFormatado = `${time.toLocaleDateString()} ${time.toLocaleTimeString([], timeOptions)}`;
        }

        const autenticacaoUserId = localStorage.getItem("autenticationUserId");
        let conteudoHTML

        if(publicacao.type === "discussao"){
            conteudoHTML = `
            <div>
                <div class="publicacao-type-discussao">
                    <p>Discuss√£o</p>
                </div>
                <div class="publicacao-profile-box">
                    <img src="${publicacao.profileImage}" class="publicacao-profile-image">
                    <p><a style="text-decoration: none; color: #333;" href="/forum/user?userTag=${publicacao.userTag}"><strong>${publicacao.userTag}</strong></a></p>
                </div>
                <h3 class="discussao-title">
                    <a href="/forum/discussao?publicacaoId=${publicacao.publicacaoId}" style="text-decoration: underline;">
                        ${publicacao.discussaoTitle}
                    </a>
                </h3>
            </div>
            <div class="publicacao-discussao-footer">
                <p>${publicacao.commentAmount} üó®Ô∏è</p>
                <p class="discussao-info">${tempoFormatado}</p>
            </div>
            `;
            if (publicacao.userId === autenticacaoUserId || publicacao.adminPermissions) {
                conteudoHTML += `
                    <button id="remover-discussao" onclick="deletaDiscussao('${publicacao.publicacaoId}', '${publicacao.userId}')">
                        Remover
                    </button>
                `;
            }
        }
        if(publicacao.type === "post") {
            if(publicacao.media){
                conteudoHTML = `
                    <div>
                        <div>
                            <div class="publicacao-type-post">
                                <p>Post</p>
                            </div>
                            <div class="publicacao-profile-box">
                                <img src="${publicacao.profileImage}" class="publicacao-profile-image"><p><a style="text-decoration: none; color: #333;" href="/forum/user?userTag=${publicacao.userTag}"><strong>${publicacao.userTag}</strong></a></p>
                            </div>
                        </div>
                        <div>
                            <div class="publicacao-post-text">
                                <p>${publicacao.text}</p>
                            </div>
                            <div>
                                <img src="${publicacao.media ? publicacao.media : 'https://mariananardi.com.br/wp-content/uploads/2018/09/Gato-x-leao.jpg'}" class="publicacao-post-image">
                            </div>
                        </div>
                    </div>
                    <div class="publicacao-post-footer">
                        <div>
                            <button class="publicacao-post-footer-button">${publicacao.commentAmount || 0} üí¨</button>
                            <button class="publicacao-post-footer-button">${publicacao.likeAmount || 0} üëç</button>
                        </div>
                        <p class="discussao-info">${tempoFormatado}</p>
                    </div>
                `;
            }
            else{
                conteudoHTML = `
                    <div>
                        <div class="publicacao-type-post">
                            <p>Post</p>
                        </div>
                        <div class="publicacao-profile-box">
                            <img src="${publicacao.profileImage}" class="publicacao-profile-image"><p><a style="text-decoration: none; color: #333;" href="/forum/user?userTag=${publicacao.userTag}"><strong>${publicacao.userTag}</strong></a></p>
                        </div>
                    </div>
                    <div>
                        <div class="publicacao-post-text">
                            <p>${publicacao.text}</p>
                        </div>
                    </div>
                    <div class="publicacao-post-footer">
                        <div>
                            <button class="publicacao-post-footer-button">${publicacao.commentAmount || 0} üí¨</button>
                            <button class="publicacao-post-footer-button">${publicacao.likeAmount || 0} üëç</button>
                        </div>
                        <p class="discussao-info">${tempoFormatado}</p>
                    </div>
                `;
            }
            if (publicacao.userId === autenticacaoUserId || publicacao.adminPermissions) {
                conteudoHTML += `
                    <button id="remover-discussao" onclick="deletaPost('${publicacao.publicacaoId}', '${publicacao.userId}')">
                        Remover
                    </button>
                `;
            }
        }

        publicacaoDiv.innerHTML = conteudoHTML;

        // Adiciona a publica√ß√£o √† lista
        publicacoesDiv.appendChild(publicacaoDiv);
    });
  }
  
  async function getDestaques(amount) {
    try {
        const response = await fetch('/API/forum/getdestaques', {
            method: 'POST', // Altera o m√©todo para POST
            headers: {
                'Content-Type': 'application/json', // Define o tipo de conte√∫do como JSON
            },
            body: JSON.stringify({ amount, userId: localStorage.getItem("autenticationUserId") })
        });

        if (!response.ok) {
            throw new Error(`Erro ao buscar publica√ß√µes: ${response.statusText}`);
        }

        const publicacoes = await response.json();
        console.log(publicacoes);  // Verifica as publica√ß√µes recebidas
        renderPublicacoes(publicacoes); // Renderiza as publica√ß√µes recebidas
    } catch (error) {
        console.error('Erro ao buscar as publica√ß√µes:', error);
    }
}
  
  function listenForFollowingPublicacoes(userTag) {
      if (!followingList) {
          console.error('FollowingList √© necess√°rio para escutar mensagens.');
          return;
      }
  
      // Conectar ao servidor de mensagens com par√¢metros na URL
      const eventSource = new EventSource(`/API/forum/stream-followingpublicacoes`);
  
      eventSource.onmessage = (event) => {
          try {
              const publicacoes = JSON.parse(event.data);
              renderAll(publicacoes);
          } catch (error) {
              console.error('Erro ao processar os dados recebidos:', error);
          }
      };
  
      eventSource.onerror = (error) => {
          eventSource.close();
      };
  }
  
  async function deletaDiscussao(publicacaoId, userId) {
    try {
        const response = await fetch(`/API/forum/removerdiscussao`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ userId, publicacaoId }),
        });
  
        const responseData = await response.json();
        if (response.ok) {
        }
  
      }catch (error) {
      console.error('Erro ao salvar no Firebase:', error);
      res.status(500).json({ error: 'Erro interno do servidor.' });
    }
  }

  async function deletaPost(publicacaoId, userId) {
    try {
        const response = await fetch(`/API/forum/removerpost`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ userId, publicacaoId }),
        });
  
        const responseData = await response.json();
        if (response.ok) {
        }
  
      }catch (error) {
      console.error('Erro ao salvar no Firebase:', error);
      res.status(500).json({ error: 'Erro interno do servidor.' });
    }
  }
  
// Postar nova mensagem
document.getElementById('post').addEventListener('click', async () => {
  const userId = localStorage.getItem("autenticationUserId");
  if (!userId) {
    document.getElementById('statusMessage').textContent = 'A mensagem precisa de um userId.';
    return;
  }

  const text = document.getElementById('messageText').value;
  const mediaFile = document.getElementById('mediaFile').files[0];

  const formData = new FormData();
  formData.append('userId', userId);
  formData.append('text', text);
  if (mediaFile) formData.append('media', mediaFile);

  try {
    const response = await fetch('/API/forum/criarpost', {
      method: 'POST',
      body: formData, // Enviar como FormData para suportar arquivos
    });

    const responseData = await response.json();
    if (response.ok) {
      document.getElementById('messageText').value = '';
      document.getElementById('mediaFile').value = '';
    } else {
    console.log(responseData.error || 'Erro ao publicar.');
    }
  } catch (error) {
    console.log(`Erro: ${error.message}`);
  }

  fecharBetterPopup('novo-post-popup');
});
  
  let categoriaPagina;
  
  window.onload = () => {
    getDestaques(20);
  }
  </script>
  </html>